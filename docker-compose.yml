version: '3.9'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
      - microservice_api
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: foto_flow_db
      POSTGRES_USER: paras_user
      POSTGRES_PASSWORD: PostgressPassword123
    ports:
      - "5433:5432"
    restart: unless-stopped

  frontend:
    build:
      context: ./CLIENT
    container_name: frontend
    depends_on:
      - backend
    env_file:
      - ./CLIENT/.env
    restart: unless-stopped

  backend:
    build:
      context: ./SERVER
    container_name: backend
    env_file:
      - ./SERVER/.env
    depends_on:
      - postgres
    volumes:
      - uploads-data:/app/uploads
    restart: unless-stopped

  microservice_api:
    build:
      context: ./FACE_RECOGNIZE
    container_name: microservice_api
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001
    depends_on:
      - redis
    volumes:
      - ./FACE_RECOGNIZE:/app
    env_file:
      - ./FACE_RECOGNIZE/.env
    restart: unless-stopped

  microservice_celery:
    build:
      context: ./FACE_RECOGNIZE
    container_name: microservice_celery
    command: celery -A app.tasks worker --loglevel=info
    depends_on:
      - redis
    volumes:
      - ./FACE_RECOGNIZE:/app
      - uploads-data:/server_uploads
    env_file:
      - ./FACE_RECOGNIZE/.env
    restart: unless-stopped

volumes:
  uploads-data:
